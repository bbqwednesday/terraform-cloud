name: "Terraform Cloud Remote Dispatch Action Handler"

on: [repository_dispatch]

jobs:
  terraform:
    runs-on: ubuntu-latest
    steps:

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2.0.2
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Create Workspace Via API
        if: contains(github.event.action,'init')
        env:
          TRIGGER: ${{ github.event.client_payload.repository }}
        run: |
          export TF_WORKSPACE=$(echo $TRIGGER | cut -d "/" -f 2)
          curl -X POST https://app.terraform.io/api/v2/organizations/bbqwednesday/workspaces \
          -H 'Accept: application/vnd.github.everest-preview+json' \
          --header "Authorization: Bearer ${{ secrets.TFE_ORG_TOKEN }}" \
          --header "Content-Type: application/vnd.api+json" \
          --data '{"data": {"attributes": {"name": "'"$TF_WORKSPACE"'"},"type":"workspaces"}}'

      - name: Initialize Workspace
        if: contains(github.event.action,'init')
        env:
          TRIGGER: ${{ github.event.client_payload.repository }}
        run: |
          export TF_WORKSPACE=$(echo $TRIGGER | cut -d "/" -f 2)
          export TF_CLOUD_ORGANIZATION=${{ github.repository_owner }}
          terraform init -upgrade
          export TF_VAR_github_user=${{ github.repository_owner }}
          export TF_VAR_oci_compartment_id=${{ secrets.OCI_COMPARTMENT_ID }}
          export TF_VAR_tailscale_auth_key=${{ secrets.TAILSCALE_AUTH_TOKEN }}

      - name: Checkout dynamic-tf-oci-arm64
        uses: actions/checkout@v2
        if: contains(github.event.action,'dynamic-tf-oci-arm64')
        with:
          repository: dashaun/dynamic-tf-oci-arm64

      - name: terraform validate
        id: validate
        if: contains(github.event.action,'init')
        run: |
          terraform validate -no-color

      - name: terraform plan
        id: plan
        if: contains(github.event.action,'init')
        run: |
          terraform plan -no-color
          continue-on-error: true

      - name: terraform apply
        id: apply
        if: steps.plan.outcome == 'success'
        run: terraform apply -auto-approve