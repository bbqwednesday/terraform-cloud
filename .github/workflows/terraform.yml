name: "Terraform Cloud Remote Dispatch Action Handler"

on: [repository_dispatch]

jobs:
  terraform:
    runs-on: ubuntu-latest
    steps:

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2.0.2
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Create Workspace Via API
        if: contains(github.event.action,'init')
        env:
          TRIGGER: ${{ github.event.client_payload.repository }}
        run: |
          export TF_WORKSPACE=$(echo $TRIGGER | cut -d "/" -f 2)
          curl -X POST https://app.terraform.io/api/v2/organizations/bbqwednesday/workspaces \
          -H 'Accept: application/vnd.github.everest-preview+json' \
          --header "Authorization: Bearer ${{ secrets.TFE_ORG_TOKEN }}" \
          --header "Content-Type: application/vnd.api+json" \
          --data '{"data": {"attributes": {"name": "'"$TF_WORKSPACE"'"},"type":"workspaces"}}'


      - name: Checkout dynamic-tf-oci-arm64
        uses: actions/checkout@v3
        if: contains(github.event.action,'dynamic-tf-oci-arm64')
        with:
          repository: dashaun/dynamic-tf-oci-arm64-runner
          ref: main

      - name: terraform init
        id: init
        env:
          TRIGGER: ${{ github.event.client_payload.repository }}
          TF_CLOUD_ORGANIZATION: bbqwednesday
          TF_VAR_github_user: dashaun
          TF_VAR_tailscale_auth_key: ${{ secrets.TAILSCALE_AUTH_TOKEN }}
          TF_VAR_tenancy_ocid: ${{ secrets.OCI_TENANCY_ID }}
          TF_VAR_compartment_ocid: ${{ secrets.OCI_COMPARTMENT_ID }}
          TF_VAR_user_ocid: ${{ secrets.OCI_USER_OCID }}
          TF_VAR_fingerprint: ${{ secrets.OCI_FINGERPRINT }}
          TF_VAR_private_key: ${{ secrets.OCI_PRIVATE_KEY }}
        run: |
          export TF_WORKSPACE=$(echo $TRIGGER | cut -d "/" -f 2)
          terraform init -upgrade

      - name: terraform validate
        id: validate
        env:
          TRIGGER: ${{ github.event.client_payload.repository }}
          TF_CLOUD_ORGANIZATION: bbqwednesday
          TF_VAR_github_user: dashaun
          TF_VAR_tailscale_auth_key: ${{ secrets.TAILSCALE_AUTH_TOKEN }}
          TF_VAR_tenancy_ocid: ${{ secrets.OCI_TENANCY_ID }}
          TF_VAR_compartment_ocid: ${{ secrets.OCI_COMPARTMENT_ID }}
          TF_VAR_user_ocid: ${{ secrets.OCI_USER_OCID }}
          TF_VAR_fingerprint: ${{ secrets.OCI_FINGERPRINT }}
          TF_VAR_private_key: ${{ secrets.OCI_PRIVATE_KEY }}
        if: contains(github.event.action,'init')
        run: |
          terraform validate -no-color

      - name: terraform plan
        id: plan
        env:
          TRIGGER: ${{ github.event.client_payload.repository }}
          TF_CLOUD_ORGANIZATION: bbqwednesday
          TF_VAR_github_user: dashaun
          TF_VAR_tailscale_auth_key: ${{ secrets.TAILSCALE_AUTH_TOKEN }}
          TF_VAR_tenancy_ocid: ${{ secrets.OCI_TENANCY_ID }}
          TF_VAR_compartment_ocid: ${{ secrets.OCI_COMPARTMENT_ID }}
          TF_VAR_user_ocid: ${{ secrets.OCI_USER_OCID }}
          TF_VAR_fingerprint: ${{ secrets.OCI_FINGERPRINT }}
          TF_VAR_private_key: ${{ secrets.OCI_PRIVATE_KEY }}
        if: contains(github.event.action,'init')
        run: |
          export TF_WORKSPACE=$(echo $TRIGGER | cut -d "/" -f 2)
          terraform plan -no-color
        continue-on-error: true

      - name: terraform apply
        id: apply
        env:
          TRIGGER: ${{ github.event.client_payload.repository }}
          TF_CLOUD_ORGANIZATION: bbqwednesday
          TF_VAR_github_user: dashaun
          TF_VAR_tailscale_auth_key: ${{ secrets.TAILSCALE_AUTH_TOKEN }}
          TF_VAR_tenancy_ocid: ${{ secrets.OCI_TENANCY_ID }}
          TF_VAR_compartment_ocid: ${{ secrets.OCI_COMPARTMENT_ID }}
          TF_VAR_user_ocid: ${{ secrets.OCI_USER_OCID }}
          TF_VAR_fingerprint: ${{ secrets.OCI_FINGERPRINT }}
          TF_VAR_private_key: ${{ secrets.OCI_PRIVATE_KEY }}
        if: steps.plan.outcome == 'success'
        run: |
          export TF_WORKSPACE=$(echo $TRIGGER | cut -d "/" -f 2)
          terraform apply -auto-approve

      - name: terraform destroy
        id: destroy
        env:
          TRIGGER: ${{ github.event.client_payload.repository }}
          TF_CLOUD_ORGANIZATION: bbqwednesday
          TF_VAR_github_user: dashaun
          TF_VAR_tailscale_auth_key: ${{ secrets.TAILSCALE_AUTH_TOKEN }}
          TF_VAR_tenancy_ocid: ${{ secrets.OCI_TENANCY_ID }}
          TF_VAR_compartment_ocid: ${{ secrets.OCI_COMPARTMENT_ID }}
          TF_VAR_user_ocid: ${{ secrets.OCI_USER_OCID }}
          TF_VAR_fingerprint: ${{ secrets.OCI_FINGERPRINT }}
          TF_VAR_private_key: ${{ secrets.OCI_PRIVATE_KEY }}
        if: contains(github.event.action,'destroy')
        run: |
          export TF_WORKSPACE=$(echo $TRIGGER | cut -d "/" -f 2)
          terraform destroy -auto-approve